public class ExceptionApp {
    public static void main(String[] args) {
        System.out.println(1); //1출력
        int[] scores = {10,20,30}; // scores라는 변수명을 가진 배열 선언
        try {
            System.out.println(2);  //2출력
            System.out.println(scores[3]); //배열의 index가 0 1 2 밖에 없으므로 예외 발생
            System.out.println(3);            //예외가 발생하고 난 후에 예외처리로 넘어가기 때문에 실행되지 않음
            System.out.println(2 / 0);        //예외가 발생하고 난 후에 예외처리로 넘어가기 때문에 실행되지 않음
            System.out.println(4);            //예외가 발생하고 난 후에 예외처리로 넘어가기 때문에 실행되지 않음
        } catch(ArithmeticException e){
            System.out.println("잘못된 계산이네요.");
        } catch(ArrayIndexOutOfBoundsException e){   //예외처리 변수 e 생성
            System.out.println("없는 값을 찾고 계시네요 ^^");   //예외처리
        }
        System.out.println(5);  //예외처리 후 값은 출력된다
    }
}
 
/*
출력형태
1
2
없는 값을 찾고 계시네요
5
*/
------------------------------------------------------------------------------------
/*
예외의 우선순위
*/

public class ExceptionApp {
    public static void main(String[] args) {
        System.out.println(1);
        int[] scores = {10,20,30};
        try {
            System.out.println(2);
            System.out.println(scores[3]);  //예외처리
            System.out.println(3);
            //System.out.println(2 / 0);
            System.out.println(4);
        } catch(ArithmeticException e){
            System.out.println("계산이 잘못된 것 같아요.");
        } catch(Exception e){
            System.out.println("먼가 이상합니다. 오류가 발생했습니다. ");
        }
        System.out.println(5);
    }
}
/*
1.출력형태
1
2
먼가 이상합니다. 오류가 발생했습니다
5

해석 
예외처리에서도 부모자식관계가 있는데 예외처리에서 가장 부모역할을 맡는 것은Exception이다 
위의 코드에서 예외처리가 발생한 부분은 System.out.println(scores[3]);부분인데 System.out.println(scores[3]);의 예외처리를 하기
위해서는 catch(ArrayIndexOutOfBoundsException e)가 필요하다 그러나 위 코드에서는  catch(ArrayIndexOutOfBoundsException e)가 없기때문에 예외처리의 가장 부모격인 Exception e로 들어가서 처리된다. 그래서 예외처리가 가능한 것이다

그러나 주석처리되어있는  System.out.println(2 / 0);를 풀고 System.out.println(scores[3]); 에 주석(//)처리를 했을경우에
exception e 보다  ArithmeticException e 의 예외처리가 더 먼저이므로  
출력형태는 
1
2
3
계산이 잘못된 것 같아요.
5
가 나오게 된다

*/