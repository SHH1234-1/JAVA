package Baekjoon;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

//https://www.acmicpc.net/problem/1373

public class Number1373 {
	static int[] powNumbers = {1, 2, 4}; //2^0 2^1 2^2
	
	
	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		String twoStr = br.readLine(); //2진수 입력
		char[] twoCharArr = twoStr.toCharArray(); // 이진법을 쪼개서 하나하나씩 배열에 넣음
		int len = twoCharArr.length; //2진법 수의 길이
		int index;
		
		if(len % 3!=0) {  //3으로 나누어 떨어지지 않을떄
			index = (len/3);
		}else {			 //3으로 나누어 떨어질떄 
			index = (len /3)- 1; //3으로 나누어 떨어질때는 한자리가 추가 되지 않는다
		}
		
		char [] eightCharArr = new char[index +1];  //3으로 나누어 떨어지지 않을때는 +1로 한자리가 추가 되고 3으로 나누어떨어지는 경우에는 아까 -1을 하고 다음+1을 해주므로 자리수가 증가하지 않는다 
													//8진법을 담을 배열 eightCharArr
		int powNumber = 0, num = 0;
		
		while(--len >=0) {
			num +=(twoCharArr[len]-'0') * powNumbers[powNumber];
			
			if(powNumber ==2) {  //2진수를 3번 계산했다면 [순서대로 (0 1 2)3번계산] 했다면 
				eightCharArr[index] = (char)(num +'0');
				index--; //8진법 배열의 주소값을 바꿔줌으로써 다음 값을 입력 받을 수 있도록 해줌
				powNumber = 0; //2의 자리수 초기화
				num = 0;  //
			}else {
				powNumber++;
			}
				
		}
		
		if(index == 0) {
			eightCharArr[index] = (char)(num + '0');
		}
		
		System.out.println(new String(eightCharArr));
	}

}
