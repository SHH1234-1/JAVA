package Baekjoon;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

public class Number1912 {

	public static void main(String[] args) throws NumberFormatException, IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); //첫째줄에 정수 두번째 줄에 n개의 정수로 이루어진 수열을 입력
		StringTokenizer st; //두번째 입력받은 수열을 자르기 위함
		int n = Integer.parseInt(br.readLine()); //첫번째줄 정수n을 입력받음 
		int[] numbers = new int[n]; //n만큼 배열의 크기 지정
		
		st = new StringTokenizer(br.readLine()); //두번째줄을 입력받고 토큰을 자름
	
		for(int i = 0;i<n; i++) {
			numbers[i] = Integer.parseInt(st.nextToken()); //토큰을 잘라서 배열에 넣음
		}
		
		int max = numbers[0]; //최대값의 기본값은 배열의 첫번째 값으로
		int sum = 0; //합 초기화
		for(int i = 0; i<n; i++) {
			sum += numbers[i];
			max = Math.max(max, sum);
			if(sum<0) sum = 0; //예를 들어  A B C D 가 입력받을때 A+B+C가 음수 D가 양수라면  A+B+C+D는 무조건 D보다 작기떄문에 A+B+C합의 값을 0으로 해버리고 D부터 다시 합의 값을 구하는것이 최대값이 된다
		}
		
		System.out.print(max);
		
		
	}

}
