package Baekjoon;

import java.util.Scanner;

public class Number1932 {
	static int n;
	static int dp[][], cost[][];//dp=누적값을 저장하는 배열 cost 각 층의 값을 저장하는 배열

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		
		n=sc.nextInt(); //층수 입력
		
		//1번째 인덱스부터 사용할 것이므로 +1
		dp=new int[n+1][n+1]; 
		cost = new int[n+1][n+1];
		
		for(int i=1;i<=n;i++) {
			for(int j=1;j<=i;i++) { 
				cost[i][j] = sc.nextInt(); //각층의 값을 입력
			}
		}
		
		dp[1][1] = cost[1][1]; //첫층의 값은 미리 누적값에 저장
		
		for(int i = 2;i<=n;i++) {
			for(int j=1;j<=i;i++) {
				
				if(j==1) {
					dp[i][j] = cost[i][j] + dp[i-1][j]; //1열만 사용할 경우
				}else {
					dp[i][j] = cost[i][j] +Math.max(dp[i-1][j], dp[i-1][j-1]); //2열 이상의 열을 사용할 경우
				}
			}
			
		}
		
		int max = Integer.MIN_VALUE;
		for(int i =1;i<=n;i++) {
			if(dp[n][i]>max) {  //n층에 저장된 값을 중 최대값을 찾는다
				max = dp[n][i];
			}
		}
		
		System.out.println(max);
		

	}

}
