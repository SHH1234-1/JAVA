package Baekjoon;

import java.util.Scanner;

public class Number2156 {

	public static void main(String[] args) {
		
		/*dp[n] = 포도주 n개가 주어졌을때 가장많이 마실 수 있는 양
		 * p[n] = n번째 포도주의 양
		 * 
		 * 0번 연속 마실 수 있는 경우
		 * n-1의 포도주를 0번 연속 마셨을 경우랑 같기 때문에
		 * dp[n] = dp[n-1]
		 * 
		 * 1번연속 마실 수 있는 경우
		 * n-1의 포도주는 마시면 안되지만 n-2번째는 마시는 여부가 상관없음 
		 * dp[n] = dp[n-2]+p[n]
		 * 
		 * 2번연속 마실 수 있는 경우
		 * n-2번째 포도주는 마시면 안되지만 n-1의 포도주는 마셔도 됨
		 * dp[n] = dp[n-3]+p[n-1]+p[n]
		 
		 * */
		
		Scanner sc = new Scanner(System.in);
		
		int n = sc.nextInt();
		
		int p[] = new int[n+1];  // n번째 포도주의 양
		int dp[] = new int[n+1]; // 포도주 n개가 주어졌을때 가장많이 마실 수 있는 양
		
		for(int i=1; i<=n; i++) { //포도주의 양 입력
			p[i]= sc.nextInt();
		}
		dp[1] =p[1];
		if(n>1) { //n이 1인 경우 에러가 발생하므로 예외처리 
			dp[2] = p[1] + p[2]; 
		}
		for(int i =3; i<=n; i++) {
			dp[i] = Math.max(dp[i-1], Math.max(dp[i-2]+p[i], dp[i-3]+p[i-1]+p[i]));  //1번 연속 마시는 경우와 2번연속 마시는 경우를 우선적으로 비교하고 0번 연속 마시는 경우를 그 2경우 중에서 큰것과 비교한다
		}
		
		System.out.println(dp[n]);
	}

}
